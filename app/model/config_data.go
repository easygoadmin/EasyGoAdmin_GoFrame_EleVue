// ==========================================================================
// This is auto-generated by gf cli tool. Fill this file as you wish.
// ==========================================================================

package model

import (
	"easygoadmin/app/model/internal"
)

// ConfigData is the golang structure for table sys_config_data.
type ConfigData internal.ConfigData

// Fill with you ideas below.

// 字典项列表查询条件
type ConfigDataPageReq struct {
	ConfigId int    `p:configId` // 字典ID
	Title    string `p:"name"`   // 配置标题
	Page     int    `p:page`     // 页码
	Limit    int    `p:limit`    // 每页数
}

// 添加字典项
type ConfigDataAddReq struct {
	Title    string `p:"title"       v:"required#配置项标题不能为空"`  // 配置标题
	Code     string `p:"code"        v:"required#配置项编码不能为空"`  // 配置编码
	Value    string `p:"value"`                               // 配置值
	Options  string `p:"options"`                             // 配置项
	ConfigId int    `p:"config_id"   v:"required#配置ID不能为空"`   // 配置ID
	Type     string `p:"type"        v:"required#请选择配置项类型"`   // 配置类型
	Sort     int    `p:"sort"        v:"required#配置项排序号不能为空"` // 排序
	Note     string `p:"note"`                                // 配置说明
}

// 更新字典项
type ConfigDataUpdateReq struct {
	Id       int    `p:id v:"required#主键ID不能为空"`
	Title    string `p:"title"       v:"required#配置项标题不能为空"`  // 配置标题
	Code     string `p:"code"        v:"required#配置项编码不能为空"`  // 配置编码
	Value    string `p:"value"`                               // 配置值
	Options  string `p:"options"`                             // 配置项
	ConfigId int    `p:"config_id"   v:"required#配置ID不能为空"`   // 配置ID
	Type     string `p:"type"        v:"required#请选择配置项类型"`   // 配置类型
	Sort     int    `p:"sort"        v:"required#配置项排序号不能为空"` // 排序
	Note     string `p:"note"`                                // 配置说明
}

// 删除字典项
type ConfigDataDeleteReq struct {
	Ids string `p:ids v:"required#请选择需要删除的数据记录"`
}

// 设置状态
type ConfigDataStatusReq struct {
	Id     int `p:"id" v:"required#主键ID不能为空"`
	Status int `p:"status"    v:"required#状态不能为空"`
}

// 配置数据列表
type ConfigDataVo struct {
	ConfigData
	TypeName string `json:"typeName"`
}
